#!/bin/bash
ETC_HOSTS=/etc/hosts

#############################
#Linea de Comandos de ayuda #
#############################
mostrar_ayuda() {
    echo "Laboratorio para pentesting usando comandos bash y Docker"
    echo
    echo "Uso: $0 {list|status|info|start|stop} [projectname]" >&2
    echo
    echo " Este scripts us docker Y un hosts alias para hacer unas app webs en el localhost"
    echo 
    echo " Ejemplo de uso"
    echo " $0 list"
    echo " Muestra una lista de todo los proyectos que estan disponibles en este laboratorio"
    echo " $0 status"
    echo " Muestra el estado del proyecto (corriendo, no corriendo)"
    echo " $0 start [projectname]"
    echo " 	Start project and make it available on localhost" 
    echo " 	Empieza a correr la imagen de [projectname]" 
    echo " $0 info [projectname]"
    echo " 	Nos muestra informacion sobre [projectname]"
    echo
    echo " Dockerfiles from:"
    echo "  DVWA                   - Ryan Dewhurst (vulnerables/web-dvwa)"
    echo "  Mutillidae II          - Nikolay Golub (citizenstig/nowasp)"
    echo "  Altoro Mutual          - Custom made from github.com/hclproducts/altoroj"
    echo "  Webgoat(s)             - OWASP Project (bjm243/nodegoat)"
    echo "  Juice Shop             - OWASP Project (bkimminich/juice-shop)"
    echo "  Security Ninjas        - OpenDNS Security Ninjas AppSec Training"
    echo "  Vulnerable GraphQL API - Carve Systems LLC (carvesystems/vulnerable-graphql-api)"

    exit 1
}


######################################################
# Verificamos que docker este instalado y funcionado #
######################################################
if ! [ -x "$(command -v docker)" ]; then
  echo 
  echo " Docker no fue econtrado, porfavor instale docker antes de ejecutar $0"
  echo " En el caso de Kali-Linux puede instalar Docker ejecutando el script "
  echo "Este archivo biene de https://github.com/itboxltda/pentestlab"
  exit
fi

if sudo service docker status | grep inactive > /dev/null
then 
	echo "Docker no esta corriendo."
	echo -n "Desea empezar a correr Docker (s/n)?"
	read answer
	if echo "$answer" | grep -iq "^s"; then
		sudo service docker start
	else
		echo "No inicializado, script no puede correr aplicaciones"
	fi
fi


######################################
# Lista de toda las apps disponibles #
######################################
list() {
    echo "Available pentest applications" >&2
    echo "  webgoat8		- OWASP WebGoat 8.0"
    echo "  goatandwolf		- OWASP Goatandwolf"
    echo "  dvwa     		- Damn Vulnerable Web Application"
    echo "  mutillidae		- OWASP Mutillidae II"
    echo "  juiceshop		- OWASP Juice Shop"
    echo "  securityninjas	- OpenDNS Security Ninjas"
    echo "  altoro		- Altoro Mutual Vulnerable Bank"
    echo "  graphql		- Vulnerable GraphQL API"
    echo
    exit 1

}

################################
# Informacion de las imagenes  #
################################
info () {
  case "$1" in 
    webgoat7)
      project_info_webgoat7
      ;;
    webgoat8)
      project_info_webgoat8      
      ;;
    goatandwolf)
      project_info_webgoat8  
      ;;
    dvwa)
      project_info_dvwa 
      ;;
    mutillidae)
      project_info_mutillidae
    ;;
    juiceshop)
      project_info_juiceshop
    ;;
    securityninjas)
      project_info_securityninjas
    ;;
    altoro)
      project_info_altoro
    ;;
    graphql)
      project_info_graphql
    ;;
    *) 
      echo "Unknown project name"
      list
      ;;
  esac  
}



#########################
# Archivos   host       #
#########################  # Based on https://gist.github.com/irazasyed/a7b0a079e7727a4315b9
function removehost() {
    if [ -n "$(grep $1 /etc/hosts)" ]
    then
        echo "Removiendo $1 de $ETC_HOSTS";
        sudo sed -i".bak" "/$1/d" $ETC_HOSTS
    else
        echo "$1 no fue encontrado en tu $ETC_HOSTS";
    fi
}

function addhost() {
    HOSTS_LINE="$1\t$2"
    if [ -n "$(grep $2 /etc/hosts)" ]
        then
            echo "$2 ya existe en /etc/hosts"
        else
            echo "agregado $2 a tu $ETC_HOSTS";
            sudo -- sh -c -e "echo '$HOSTS_LINE' >> /etc/hosts";

            if [ -n "$(grep $2 /etc/hosts)" ]
                then
                    echo -e "$HOSTS_LINE fue agregado exitosamente a /etc/hosts";
                else
                    echo "Fallo al agregar $2, Intentar de nuevo!";
            fi
    fi
}


#######################################
#Informacion y levantar la aplicacion #
#######################################

project_info_webgoat7 () 
{
echo "WebGoat es una aplicación web deliberadamente insegura mantenida por OWASP diseñada para enseñar"
echo "Lecciones de seguridad de aplicaciones web. Puede instalar y practicar con WebGoat".
echo "su comprensión de un problema de seguridad mediante la explotación de una vulnerabilidad real en el"
echo "Aplicaciones WebGoat. Por ejemplo, en una de las lecciones el usuario debe usar inyección SQL"
echo "para robar números de tarjetas de crédito falsos. La aplicación tiene como objetivo proporcionar una enseñanza realista"
echo "entorno, que brinda a los usuarios sugerencias y código para explicar mejor la lección"
echo
echo "¿Por qué el nombre WebGoat? Los desarrolladores no deberían sentirse mal por no conocer la seguridad. Incluso los mejores programadores cometen errores de seguridad. Lo que necesitan es un chivo expiatorio, ¿verdad? ¡Cúlpale a la Cabra!"
echo
echo " https://www.owasp.org/index.php/Category:OWASP_WebGoat_Project"
echo
echo "TECNOLOGÍA: J2EE JAVA"
echo "CARACTERÍSTICAS: LECCIONES"
}

project_info_webgoat8 () 
{
echo "WebGoat es una aplicación web deliberadamente insegura mantenida por OWASP diseñada para enseñar"
echo "Lecciones de seguridad de aplicaciones web. Puede instalar y practicar con WebGoat".
echo "su comprensión de un problema de seguridad mediante la explotación de una vulnerabilidad real en el"
echo "Aplicaciones WebGoat. Por ejemplo, en una de las lecciones el usuario debe usar inyección SQL"
echo "para robar números de tarjetas de crédito falsos. La aplicación tiene como objetivo proporcionar una enseñanza realista"
echo "entorno, brindando a los usuarios sugerencias y código para explicar mejor la lección"
echo
echo "¿Por qué el nombre WebGoat? Los desarrolladores no deberían sentirse mal por no conocer la seguridad. Incluso los mejores programadores cometen errores de seguridad. Lo que necesitan es un chivo expiatorio, ¿verdad? ¡Cúlpale a la Cabra!"
echo
echo " https://www.owasp.org/index.php/Category:OWASP_WebGoat_Project"
echo "Líder del proyecto Bruce Mayhew"
echo
echo "TECNOLOGÍA: J2EE JAVA"
echo "CARACTERÍSTICAS: LECCIONES"
}

project_startinfo_webgoat8 () 
{
  echo "WebGoat 8.0 now runnung at http://webgoat8/WebGoat or http://127.7.0.1/WebGoat"
}
project_info_goatandwolf () 
{
echo "WebGoat es una aplicación deliberadamente insegura que permite a los desarrolladores interesados como usted probar las"
echo "vulnerabilidades que se encuentran comúnmente en las aplicaciones basadas en Java que utilizan componentes de código abierto comunes y populares".
echo "Ahora, aunque de ninguna manera aprobamos causar daño intencional a ningún animal, cabra u otro"
echo "creemos que aprender todo lo que pueda sobre las vulnerabilidades de seguridad es esencial para comprender"
echo "qué sucede cuando incluso un pequeño código no deseado ingresa a sus aplicaciones."
}
project_startinfo_goatandwolf () 
{
  echo "Goatandwolf now runnung at http://goatandwolf/WebGoat or http://127.17.0.1/WebGoat"
  echo "WebWolf is not mapped yet, so only challenges not using WebWolf can be completed"
}


project_info_dvwa () 
{
echo "El objetivo de DVWA es practicar algunas de las vulnerabilidades web más comunes, con varias"
echo "niveles de dificultad, con una interfaz simple y directa. Tenga en cuenta que hay"
echo "tanto vulnerabilidades documentadas como no documentadas con este software. Esto es intencional".
echo " Le animamos a intentar descubrir tantos problemas como sea posible."
echo "Ryan Dewhurst"
echo "TECNOLOGÍA: PHP / MySQL"
echo "CARACTERÍSTICAS: DIFERENTES NIVELES DE HABILIDAD"
}

project_startinfo_dvwa () 
{
  echo "Aplicación web vulnerable ahora disponible en http://dvwa"
  echo "Usuario/contraseña por defecto: admin/contraseña"
  echo "Recuerde hacer clic en el botón CREAR BASE DE DATOS antes de comenzar"
}

project_info_mutillidae () 
{
echo "NOWASP (Mutillidae) es una aplicación web gratuita, de código abierto y deliberadamente vulnerable"
echo "proporcionando un objetivo para los entusiastas de la seguridad web".
echo "Proyecto Incubadora OWASP. Líder Jeremy Druin"
echo
echo "TECNOLOGÍA: PHP / MySQL"
echo "CARACTERÍSTICAS: "
}

project_startinfo_mutillidae () 
{
  echo "OWASP Mutillidae II ahora disponible en http://mutillidae"
   echo "Recuerde hacer clic en el enlace crear base de datos antes de comenzar"
}

project_info_juiceshop () 
{
echo "OWASP Juice Shop es una aplicación web intencionalmente insegura escrita completamente en JavaScript"
echo "que abarca toda la gama de OWASP Top Ten y otras graves fallas de seguridad".
echo " https://github.com/bkimminich/juice-shop"
echo
echo "TECNOLOGÍA: Javascript"
echo "CARACTERÍSTICAS: "
}

project_startinfo_juiceshop () 
{
  echo "OWASP Juice Shop now running"
}


project_info_securityninjas () 
{
echo "Este laboratorio de capacitación práctica consta de 10 divertidos ejercicios de piratería del mundo real"
echo "correspondientes a cada una de las 10 vulnerabilidades principales de OWASP"
echo "Se proporcionan sugerencias y soluciones a lo largo del camino. Aunque el backend para esto está escrito en PHP"
echo "as vulnerabilidades seguirán siendo las mismas en todos los lenguajes basados en la web"
echo "por lo que la capacitación seguirá siendo relevante incluso si no codifica activamente en PHP"
echo "https://github.com/opendns/Security_Ninjas_AppSec_Training"
}

project_startinfo_securityninjas ()
{
  echo "Abrir el sitio DNS Security Ninjas ahora disponible en localhost en http://securityninjas"
}
project_info_altoro () 
{
echo "Pagina web realizada en wordpress para practicar pentesting"
echo "https://github.com/wpscanteam/VulnerableWordpress"
}

project_startinfo_altoro ()
{
  echo "Inicie sesión con el nombre de usuario jsmith y la contraseña demo1234 para inicializar la base de datos".
  echo "La segunda credencial conocida es admin/admin"
}

project_info_graphql () 
{
echo "Pagina web en la cual puedes practicar pentesting a graphql"
echo "https://carvesystems.com/news/the-5-most-common-graphql-security-vulnerabilities/"
}

project_startinfo_graphql ()
{
  echo "GraphQL vulnerable ahora asignado al puerto 80 (no 3000 como dice la documentación)".
  echo "Eche un vistazo a esta publicación para obtener más información sobre esta API: https://carvesystems.com/news/the-5-most-common-graphql-security-vulnerabilities/"
}




###################################################
# Algoritmo de correr las imagenes Docker         #
###################################################
project_start ()
{
  fullname=$1		# ex. WebGoat 8.0
  projectname=$2     	# ex. webgoat8
  dockername=$3  	
  ip=$4   		# ex. 127.5.0.1
  port=$5		# ex. 80
  port2=$6		# optional override port (if app doesn't support portmapping)
  
  echo "Starting $fullname"
  addhost "$ip" "$projectname"

  if [ "$(sudo docker ps -aq -f name=^/$projectname$)" ]; 
  then
    echo "Running command: docker start $projectname"
    sudo docker start $projectname
  else
    if [ -n "${6+set}" ]; then
      echo "Running command: docker run --name $projectname -d -p $ip:80:$port -p $ip:$port2:$port2 $dockername"
      sudo docker run --name $projectname -d -p $ip:80:$port -p $ip:$port2:$port2 $dockername
    else echo "not set";
      echo "Running command: docker run --name $projectname -d -p $ip:80:$port $dockername"
      sudo docker run --name $projectname -d -p $ip:80:$port $dockername
    fi
  fi
  echo "LISTO!"
  echo
  echo "Docker mapeado en http://$projectname or http://$ip"
  echo
}


########################################
# Algoritmo para pausar la maquina     #
########################################
project_stop ()
{
  fullname=$1	# ex. WebGoat 8.0
  projectname=$2     # ex. webgoat8

  if [ "$(sudo docker ps -q -f name=^/$projectname$)" ]; 
  then
    echo "Stopping... $fullname"
    echo "Running command: docker stop $projectname"
    sudo docker stop $projectname
    removehost "$projectname"
  fi
}


project_status()
{
  if [ "$(sudo docker ps -q -f name=webgoat8)" ]; then
    echo "WebGoat 8.0			running at http://webgoat8/WebGoat"
  else 
    echo "WebGoat 8.0			not running"  
  fi
  if [ "$(sudo docker ps -q -f name=nodegoat)" ]; then
    echo "NodeGoat 1.3			running at http://nodegoat.net/login"
  else 
    echo "NodeGoat 1.3			not running"  
  fi
  if [ "$(sudo docker ps -q -f name=dvwa)" ]; then
    echo "DVWA				running at http://dvwa"
  else 
    echo "DVWA				not running"  
  fi
  if [ "$(sudo docker ps -q -f name=mutillidae)" ]; then
    echo "Mutillidae II			running at http://mutillidae"
  else 
    echo "Mutillidae II			not running"  
  fi
  if [ "$(sudo docker ps -q -f name=juiceshop)" ]; then
    echo "OWASP Juice Shop 		running at http://juiceshop"
  else 
    echo "OWASP Juice Shop 		not running"  
  fi
  if [ "$(sudo docker ps -q -f name=securityninjas)" ]; then
    echo "OpenDNS Security Ninjas 	       running at http://securityninjas"
  else 
    echo "OpenDNS Security Ninjas	        not running" 
  fi
  if [ "$(sudo docker ps -q -f name=goatandwolf)" ]; then
    echo "Goatandwolf 	                running at http://goatandwolf"
  else 
    echo "Goatandwolf 	                not running" 
  fi
  if [ "$(sudo docker ps -q -f name=altoro)" ]; then
    echo "Altoro Mutual 	         running at http://altoro"
  else 
    echo "Altoro Mutual          	not running" 
  fi
  if [ "$(sudo docker ps -q -f name=graphql)" ]; then
    echo "Vulnerable GraphQL API	        running at http://graphql"
  else 
    echo "Vulnerable GraphQL API        	not running" 
  fi
}



project_start_dispatch()
{
  case "$1" in
    webgoat8)
      project_start "WebGoat 8.0" "webgoat8" "webgoat/webgoat-8.0" "127.7.0.1" "8080"
      project_startinfo_webgoat8
    ;;    
    goatandwolf)
      project_start "Goatandwolf" "goatandwolf" "webgoat/goatandwolf" "127.17.0.1" "8080"
      project_startinfo_goatandwolf
    ;;    
    dvwa)
      project_start "Damn Vulnerable Web Appliaction" "dvwa" "vulnerables/web-dvwa" "127.8.0.1" "80"
      project_startinfo_dvwa
    ;;    
    mutillidae)
      project_start "Mutillidae II" "mutillidae" "citizenstig/nowasp" "127.9.0.1" "80"
      project_startinfo_mutillidae
    ;;
    juiceshop)
      project_start "OWASP Juice Shop" "juiceshop" "bkimminich/juice-shop" "127.10.0.1" "3000"
      project_startinfo_juiceshop
    ;;
    securityninjas)    
      project_start "Open DNS Security Ninjas" "securityninjas" "opendns/security-ninjas" "127.13.0.1" "80"
      project_startinfo_securityninjas
    ;;
    altoro)    
      project_start "Altoro Mutual" "altoro" "eystsen/altoro" "127.14.0.1" "8080"
      project_startinfo_altoro
    ;;
    graphql)    
      project_start "Vulnerable GraphQL API" "graphql" "carvesystems/vulnerable-graphql-api" "127.15.0.1" "3000"
      project_startinfo_graphql
    ;;
    *)
    echo "ERROR: Project start dispatch doesn't recognize the project name $1" 
    ;;
  esac  
}


project_stop_dispatch()
{
  case "$1" in
    webgoat8)
      project_stop "WebGoat 8.0" "webgoat8"
    ;;
    goatandwolf)
      project_stop "Goatandwolf" "goatandwolf"
    ;;
    dvwa)
      project_stop "Damn Vulnerable Web Appliaction" "dvwa"
    ;;
    mutillidae)
      project_stop "Mutillidae II" "mutillidae"
    ;;
    juiceshop)
      project_stop "OWASP Juice Shop" "juiceshop"
    ;;
    securityninjas)
      project_stop "Open DNS Security Ninjas" "securityninjas"
    ;;
    altoro)
      project_stop "Altoro Mutual" "altoro"
    ;;
    graphql)
      project_stop "Vulnerable GraphQL API" "graphql"
    ;;
    *)
    echo "ERROR: Project stop dispatch doesn't recognize the project name $1" 
    ;;
  esac  
}


#########################
# Principales Casos     #
#########################
case "$1" in
  start)
    if [ -z "$2" ]
    then
      echo "ERROR: La opción de inicio necesita el nombre del proyecto en minúsculas"
      echo 
      list # call list ()
      break
    fi
    project_start_dispatch $2
    ;;
  stop)
    if [ -z "$2" ]
    then
      echo "ERROR: La opción de stop necesita el nombre del proyecto en minúsculas"
      echo 
      list # call list ()
      break
    fi
    project_stop_dispatch $2
    ;;
  list)
    list # call list ()
    ;;
  status)
    project_status # call project_status ()
    ;;
  info)
    if [ -z "$2" ]
    then
      echo "ERROR: La opción de info necesita el nombre del proyecto en minúsculas"
      echo 
      list # call list ()
      break
    fi
    info $2
    ;;
  *)
    mostrar_ayuda
;;
esac